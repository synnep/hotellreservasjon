# -*- coding: utf-8 -*-
"""
Created on Thu Oct 27 14:06:40 2022

@author: trygveen
"""
import math as m

class Hotell:
    """
    Klasse for å lage hotell-objekt.

    Parametre:
        Rom (int): antall rom på hotellet
        sengPerRom (int): antall senger per rom
    """

    def __init__(self, rom, sengPerRom):
        self.rom = int(rom)
        self.register = [] 
        self.kapasitet = int(rom)
        self.sengPerRom = sengPerRom
        self.maksAntGjester = rom*self.sengPerRom
        self.antGjester = 0

    def reservasjon(self):
        """
        Metode som utfører reservasjon av et rom.

        Bruker inputs for å få verdier til parametre for kundeklassen, og lager en kunde ved hjelp av kunde-klasse.
        Kunden tar rom, så kapasitet skal bli x rom mindre
        """
        print("")
        navn = input("Skriv inn navn: ")
        postnummer = input("Skriv inn postnummer: ")
        email = input("Skriv inn email: ")
        
        for i in range(len(self.register)):
            if navn == self.register[i].navn and email == self.register[i].email:
                print("Kunden har allerede en reservasjon!")
                return
                
        gjest = input("Skriv inn antallet gjester du bestiller for: ")
        
        try:
            gjest = int(gjest)
            netter = input("Skriv inn antall netter: ")
            try:
                netter = int(netter)
                kunden = Kunde(navn, postnummer, email, gjest, netter)
                
                if(m.ceil(gjest/self.sengPerRom) <= self.kapasitet):
                    self.kapasitet -= m.ceil(gjest/self.sengPerRom)
                    self.register.append(kunden)
                    
                    print("\n-------<RESERVASJON>------")
                    print(f" Kunde ( {kunden} ) med:")
                    print(f" Navn: {navn}, Email: {email}, Postnummer: {postnummer}")
                    print(f" Bestiller for {gjest} personer, for {netter} netter.")
                    print("---------------------------")
                    print(f" Gjenstående kapasitet: {self.kapasitet}")
                    print(f" Register: {self.register}")
                    print("---------------------------")
                else:
                    print("Hotellet har ikke nok kapasitet til å ta imot bestillingen din for øyeblikket")
                    print(f"Nåværende kapasitet er på {self.kapasitet} rom")
            except ValueError:
                print("Du må skrive inn antall netter som et heltall")
        
        except ValueError:
            print("Du må skrive inn antall gjester som et heltall")
        

    def sjekkLedigRom(self):
        """
        Sjekker antall ledige rom på hotellet.
        Finner også antall ledige sengeplasser.
            Hvis et rom et tatt, men ikke alle sengeplasser, telles fortsatt 
            disse sengeplassene. 
        Printer verdierne til ledige rom og ledige sengeplasser.
        """
        
        if self.kapasitet == 0:
            print("Det er ingen ledige rom på hotellet.")
            print("Bedre lykke på vårt fantastiske hotell neste gang.")
        else:
            print(f"Det er {self.kapasitet} ledige rom på hotellet.")
            ledigSengeplass = self.kapasitet*self.sengPerRom
            print(f"Dette tilsvarer {ledigSengeplass} ledige sengeplasser.")

    def sendRegning(self):
        """
        Metode som sender regning til epost til bruker.

        Funksjonalitet:
            Finner index til gjest basert på navn;
            Regner ut totalsum og printer dette til konsollen
            Hvis besillingsnavn ikke eksisterer printes dette
        """
        
        prisNatt = 1000
        rabattkode10 = "10av"
        rabattkode20 = "20av"

        navn = input("Skriv inn hele navnet du reserverte bestillingen med: ")
        email = input("Skriv inn eposten du brukte for å bestille hotellrommet: ")
        bestilling = False

        for n in range(len(self.register)):
            if navn == self.register[n].navn and email == self.register[n].email:
                bestilling = True
                index = n  # index

        if bestilling == True:
            svar = input("Har du rabattkode? Skriv 'ja' eller 'nei': ")

            if svar == "ja":
                rabattkode = input("Rabattkode: ")

                if rabattkode == rabattkode10:
                    print(
                        f"Regning er sendt til {self.register[index].navn} og epost {self.register[index].email}.")
                    totSum = prisNatt * \
                        int(self.register[index].netter) * \
                        int(self.register[index].gjestKunde) * 0.9
                    print("Totalsum ble på: ", totSum)
                    
                elif rabattkode == rabattkode20:
                    print(
                        f"Regning er sendt til {self.register[index].navn} og epost {self.register[index].email}.")
                    totSum = prisNatt * \
                        int(self.register[index].netter) * \
                        int(self.register[index].gjestKunde) * 0.8
                    print("Totalsum ble på: ", totSum)
                else:
                    print("Skriv inn en gyldig kode!")

            elif svar == "nei":
                print(
                    f"Regning er sendt til {self.register[index].navn} og epost {self.register[index].email}.")
                totSum = prisNatt * int(self.register[index].netter) * int(self.register[index].gjestKunde)
                print("Totalsum ble på: ", totSum)
                
            sjosiden.kapasitet+= m.ceil(sjosiden.register[index].gjestKunde/sjosiden.sengPerRom)
            self.register.pop(index)
            
            print("Kunden er fjernet fra registeret.")
        else:
            print("Navnet du skrev inn har ingen bestilling liggende hos hotellet.")


class Kunde:
    """
    Klasse for å lage kunde-objekter.

    Parametre:
        navn (str): navn kunden reserverer reservasjonen med
        postnummer (str): postnummer til kunden
        email (str): epost til kunden
        gjestKunde (int): antall gjester kunden bestiller for
        netter (int): antall netter kunden bestiller for
    """

    # Inisialiseringskoden. Definerer noen parametre til kundeobjektet
    def __init__(self, navn, postnummer, email, gjestKunde, netter):
        self.navn = navn
        self.postnummer = postnummer
        self.email = email
        self.gjestKunde = gjestKunde
        self.netter = netter

    def visInfo(self):
        """
        Printer navn, epost, antall gjester og antall netter om spesifikk kunde
        """
        print("\n*-*KUNDE*-*")
        print(f"\tNavn: {self.navn}")
        print(f"\tEmail: {self.email}")
        print(f"\tAntall gjester: {self.gjestKunde}")
        print(f"\tAntall netter: {self.netter}")

    def endreRes(self,r):
        """
        Metode som endrer bestillingen til en spesifikk kunde.
            Fjerner først rommet i kapasiteten
            Ber om antall nye gjester og antall nye netter
            Legger så til nytt rom basert på antall nye gjester i kapasitet
        """
                # Bestemmer hvilke index (Kunde-objekt) vi vil endre på fra registeret
        index = r

        # Legger rommene som opprinnelig var tatt av det bestemte Kunde-objektet tilbake til kapasiteten
        sjosiden.kapasitet += m.ceil(
            sjosiden.register[index].gjestKunde/sjosiden.sengPerRom)

        # Spør om en ny input som skal erstatte gjest-egenskapen i Kunde-objektet
        nyGjest = int(input(
            f"Nytt antall gjester (tidligere {sjosiden.register[index].gjestKunde}): "))

        # Sjekker om vi får valueError (vi får det om nyGjest ikke er et heltall)
        try:
            # Hvis vi ikke får valueError blir Kunde-objektets gjest-egenskap suksessfullt endret
            sjosiden.register[index].gjestKunde = nyGjest

            # Spør deretter om input for å erstatte netter-egenskapen til kundeobjektet
            nyNetter = int(input(
                f"antall netter (tidligere {sjosiden.register[index].netter}): "))

            # Sjekker igjen om vi får valueError (netter ikke heltall)
            try:
                # Hvis vi ikke får det erstatter vi netter-egenskapen
                sjosiden.register[index].netter = (nyNetter)

                # Fjerner nå det nye antallet rom som trengs ut ifra antallet gjester delt på kapasitet til hvert rom
                sjosiden.kapasitet -= m.ceil(
                    sjosiden.register[index].gjestKunde/sjosiden.sengPerRom)
            # Om vi får valueError, får vi denne responsen:
            except ValueError:
                print("Du må skrive inn antall netter som et heltall")
        except ValueError:
            print("Du må velge antall gjester som et heltall")

        # Printer ut endringene under for å gjøre det oversiktlig
        print("Endret reservasjon:")
        print(f"  Antall gjester: {sjosiden.register[index].gjestKunde}")
        print(f"  Antall netter: {sjosiden.register[index].nyNetter}")


# oppretter sjøsiden hotell
sjosiden = Hotell(10,4)

while True:

    """
    Hotellmenyen
    
    Tar imot brukerinput
    """
    
    print("")
    print("---------------------------------------")
    print("Velkommen til Sjøsiden Hotell!")
    print("---------------------------------------")
    print("")
    print("Skriv 'r' for å reservere")
    print("Skriv 'l' for å sjekke ledige rom")
    print("Skriv 'e' for å endre reservasjon")
    print("Skriv 'p' for å printe ut kundeinformasjon")
    print("Skriv 'f' for å få faktura")
    print("Skriv 'd' for å avslutte")
    valg = input("Skriv handlingen du vil gjøre: ")

    #hvis bruker velger reservasjon
    if valg == 'r':
        sjosiden.reservasjon()
    #hvis bruker velger sjekk ledige rom
    if valg == 'l':
        sjosiden.sjekkLedigRom()
    #hvis bruker velger å endre reservasjonen
    if valg == 'e':
        navn1 = input("navn: ")
        email1 = input("email: ")
        for r in range(len(sjosiden.register)):
            if(sjosiden.register[r].navn == navn1 and sjosiden.register[r].email == email1):
                sjosiden.register[r].endreRes(r)
            else:
                print("Fant ikke bestillingen din, skriv inn navn på nytt")
    #hvis bruker velger printe reservasjonen
    if valg == 'p':
        navn = input("Skriv inn navn på kunden: ")
        email = input("Skriv inn email til kunden: ")
        for r in range(len(sjosiden.register)):
            if(sjosiden.register[r].navn == navn and sjosiden.register[r].email == email):
                sjosiden.register[r].visInfo()
            else:
                print("Kunden eksisterer ikke")
    #hvis bruker velger sende regning
    if valg == 'f':
        sjosiden.sendRegning()
    #hvis bruker velger å avslutte
    if valg == 'd':
        break

print("Takk for oss!")
